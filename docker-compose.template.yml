version: '3'

networks:
  exchange:


services:

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html
      - ./docker/conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/logs/nginx:/var/log/nginx
    depends_on:
      - php
      - mysql
    networks:
      - exchange

  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    tty: true
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=exchange
    ports:
      - 3306:3306
    networks:
      - exchange

  php:
    build:
      context: ./docker/builds/php
      dockerfile: Dockerfile
    container_name: php
    restart: always
    #extra_hosts:
    #    - "host.docker.internal:host-gateway"
    #environment:
    #    XDEBUG_MODE: develop,debug
    #    XDEBUG_CONFIG:
    #        client_host=host.docker.internal
    #        start_with_request=yes
    volumes:
      - ./:/var/www/html
      - ./docker/composer_cache:/.composer
      - ./docker/conf/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/conf/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/conf/php/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      - ./docker/logs/cron/cron.log:/var/log/cron.log
    #ports:
    #    - "9000:9000"
    networks:
      - exchange

  npm:
    image: node:12-alpine
    container_name: npm
    restart: always
    volumes:
      - ./:/var/www/html
      - ./docker/npm_cache:/.npm
    working_dir: /var/www/html
    entrypoint: ['npm', '--no-build-links']
    networks:
      - exchange
